<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>Razor is a markup syntax for adding server-side logic to web pages. This assembly contains infrastructure supporting Razor MSBuild integration.</Description>

    <!--
      This is intentionally targeting netcoreapp3.0. This allows using the Microsoft.NET.Sdk.Razor package without having to solve diamond dependency problems in AspNetCore.
      We use a runtimeconfig.json.template to allow roll forwards.
      In addition, the SDK stamps an exact version of the shared fx to use in all runtimeconfig.json that are contained in the SDK.
      See the discussion here: https://github.com/dotnet/aspnetcore-internal/issues/3201#issuecomment-539631557
    -->
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <OutputType>Exe</OutputType>
    <AssemblyName>rzc</AssemblyName>

    <!-- This is not a package, it is part of Razor SDK. -->
    <IsPackable>false</IsPackable>
    <IsShipping>false</IsShipping>
    <EnableApiCheck>false</EnableApiCheck>

    <!-- Don't produce rzc.exe -->
    <UseAppHost>false</UseAppHost>

    <!-- Need to build this project in source build -->
    <ExcludeFromSourceBuild>false</ExcludeFromSourceBuild>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(SharedSourceRoot)RazorShared\TagHelperDescriptorJsonConverter.cs">
      <Link>Shared\TagHelperDescriptorJsonConverter.cs</Link>
    </Compile>
    <Compile Include="$(SharedSourceRoot)RazorShared\RazorDiagnosticJsonConverter.cs">
      <Link>Shared\RazorDiagnosticJsonConverter.cs</Link>
    </Compile>
    <Compile Include="$(SharedSourceRoot)CommandLineUtils\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Newtonsoft.Json" Version="$(Razor_NewtonsoftJsonPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis.Razor" />
  </ItemGroup>

  <!-- This makes it so that the runtimeconfig.json is included as part of the build output of the project that references this project. -->
  <Target Name="PreserveRuntimeConfig" BeforeTargets="GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <AllItemsFullPathWithTargetPath Include="$(ProjectRuntimeConfigFilePath)">
        <TargetPath>$(ProjectRuntimeConfigFileName)</TargetPath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </AllItemsFullPathWithTargetPath>
    </ItemGroup>
  </Target>
</Project>
