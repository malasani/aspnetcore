<Project>
  <PropertyGroup>

    <_BlazorBrotliPath>$(_BlazorToolsDir)compression\blazor-brotli.dll</_BlazorBrotliPath>
    <ResolveCurrentProjectStaticWebAssetsDependsOn>
      $(ResolveCurrentProjectStaticWebAssetsDependsOn);
      _ResolveBlazorFilesToCompress;
    </ResolveCurrentProjectStaticWebAssetsDependsOn>

  </PropertyGroup>

  <Target Name="_ResolveBlazorFilesToCompress" AfterTargets="_ResolveBlazorGeneratedAssets">

    <PropertyGroup>
      <_BlazorFilesIntermediateOutputPath>$(IntermediateOutputPath)compressed\</_BlazorFilesIntermediateOutputPath>
      <_GzipCompressionBlazorApplicationFilesManifestPath>$(IntermediateOutputPath)compressed\gzip.manifest.json</_GzipCompressionBlazorApplicationFilesManifestPath>
      <_BrotliCompressionBlazorApplicationFilesManifestPath>$(IntermediateOutputPath)compressed\brotli.manifest.json</_BrotliCompressionBlazorApplicationFilesManifestPath>
    </PropertyGroup>

    <MakeDir Directories="$(_BlazorFilesIntermediateOutputPath)" />
    <ItemGroup>

      <_CompressionCandidate Include="@(StaticWebAsset)" Condition="'%(SourceType)' == '' and $([System.String]::Copy('%(RelativePath)').Replace('\','/').StartsWith('_framework/'))" KeepDuplicates="false" />
      <_CompressionCandidateIntegrity Include="@(_BlazorOutputWithTargetPath->'%(FullPath)')" />
      <_CompressionCandidateWithIntegrity Include="%(Identity)">
        <SourceType>@(_CompressionCandidate->'%(SourceType)')</SourceType>
        <SourceId>@(_CompressionCandidate->'%(SourceId)')</SourceId>
        <ContentRoot>@(_CompressionCandidate->'%(ContentRoot)')</ContentRoot>
        <BasePath>@(_CompressionCandidate->'%(BasePath)')</BasePath>
        <RelativePath>@(_CompressionCandidate->'%(RelativePath)')</RelativePath>
        <InputSource>@(_CompressionCandidateIntegrity->'%(IntegrityFile)')</InputSource>
      </_CompressionCandidateWithIntegrity>

      <_GzipBlazorFileToCompress Include="@(_CompressionCandidateWithIntegrity)">
        <TargetCompressionPath>$(_BlazorFilesIntermediateOutputPath)%(RelativePath).gz</TargetCompressionPath>
        <TargetOutputPath>%(RelativePath).gz</TargetOutputPath>
        <RelativePath>%(RelativePath).gz</RelativePath>
      </_GzipBlazorFileToCompress>
      <_GzipBlazorFileToCompress Remove="@(_BlazorFileCompressExclusion)" />

      <_BrotliBlazorFileToCompress Include="@(_CompressionCandidateWithIntegrity)">
        <TargetCompressionPath>$(_BlazorFilesIntermediateOutputPath)%(RelativePath).br</TargetCompressionPath>
        <TargetOutputPath>%(RelativePath).br</TargetOutputPath>
        <RelativePath>%(RelativePath).br</RelativePath>
      </_BrotliBlazorFileToCompress>
      <_BrotliBlazorFileToCompress Remove="@(_BlazorFileCompressExclusion)" />

      <_BlazorFileToCompress Include="@(_GzipBlazorFileToCompress)" />
      <_BlazorFileToCompress Include="@(_BrotliBlazorFileToCompress)" />
      <_BlazorFileToCompress Remove="@(_BlazorFileCompressExclusion)" />

      <_CompressedStaticWebAsset Include="@(_BlazorFileToCompress->'%(TargetCompressionPath)')" RemoveMetadata="TargetOutputPath;TargetCompressionPath" />

      <StaticWebAsset Include="@(_CompressedStaticWebAsset->'%(FullPath)')" KeepMetadata="SourceType;SourceId;ContentRoot;BasePath;RelativePath" />
      <FileWrites Include="@(_CompressedStaticWebAsset)" />

    </ItemGroup>

  </Target>

  <UsingTask TaskName="GzipCompressBlazorApplicationFiles" AssemblyFile="$(_BlazorTasksPath)" />
  <UsingTask TaskName="BrotliCompressBlazorApplicationFiles" AssemblyFile="$(_BlazorTasksPath)" />
  <UsingTask TaskName="GenerateBlazorCompressionManifest" AssemblyFile="$(_BlazorTasksPath)" />
  
  <Target
    Name="_GzipCompressBlazorApplicationFiles"
    DependsOnTargets="ResolveStaticWebAssetsInputs"
    BeforeTargets="_BlazorStaticWebAssetsCopyGeneratedFilesToOutputDirectory"
    Inputs="$(_GzipCompressionBlazorApplicationFilesManifestPath)"
    Outputs="@(_GzipBlazorFileToCompress->'%(TargetCompressionPath)')">

    <GzipCompressBlazorApplicationFiles ManifestPath="$(_GzipCompressionBlazorApplicationFilesManifestPath)" />

  </Target>

  <Target
    Name="_GenerateGzipCompressionBlazorApplicationFilesManifest"
    BeforeTargets="_GzipCompressBlazorApplicationFiles"
    Inputs="@(_GzipBlazorFileToCompress->'%(InputSource)')"
    Outputs="$(_GzipCompressionBlazorApplicationFilesManifestPath)">

    <GenerateBlazorCompressionManifest FilesToCompress="@(_GzipBlazorFileToCompress)" ManifestPath="$(_GzipCompressionBlazorApplicationFilesManifestPath)" />
  </Target>

  <Target
    Name="_BrotliCompressBlazorApplicationFiles"
    BeforeTargets="GetCopyToPublishDirectoryItems;_CopyResolvedFilesToPublishPreserveNewest"
    DependsOnTargets="ResolveStaticWebAssetsInputs"
    Inputs="$(_BrotliCompressionBlazorApplicationFilesManifestPath)"
    Outputs="@(_BrotliBlazorFileToCompress->'%(TargetCompressionPath)')">

    <BrotliCompressBlazorApplicationFiles
      BlazorBrotliPath="$(_BlazorBrotliPath)"
      ManifestPath="$(_BrotliCompressionBlazorApplicationFilesManifestPath)"
      ToolExe="$(_DotNetHostFileName)"
      ToolPath="$(_DotNetHostDirectory)" />
  </Target>

  <Target
    Name="_GenerateBrotliCompressionBlazorApplicationFilesManifest"
    BeforeTargets="_GzipCompressBlazorApplicationFiles"
    Inputs="@(_BrotliBlazorFileToCompress->'%(InputSource)')"
    Outputs="$(_BrotliCompressionBlazorApplicationFilesManifestPath)">

    <GenerateBlazorCompressionManifest FilesToCompress="@(_BrotliBlazorFileToCompress)" ManifestPath="$(_BrotliCompressionBlazorApplicationFilesManifestPath)" />
  </Target>

</Project>
