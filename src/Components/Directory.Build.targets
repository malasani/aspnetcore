<Project>
  <PropertyGroup Condition="'$(IsUnitTestProject)' != 'true'">
    <GenerateDocumentationFile Condition="'$(GenerateDocumentationFile)' == ''">true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <!-- Add a project dependency without reference output assemblies to enforce build order -->
    <!-- Applying workaround for https://github.com/microsoft/msbuild/issues/2661 and https://github.com/dotnet/sdk/issues/952 -->
    <ProjectReference
      Condition="'$(ReferenceBlazorBuildLocally)' == 'true' and '$(BuildNodeJS)' != 'false' and '$(BuildingInsideVisualStudio)' != 'true'"
      Include="$(RepoRoot)src\Components\Web.JS\Microsoft.AspNetCore.Components.Web.JS.npmproj"
      ReferenceOutputAssemblies="false"
      SkipGetTargetFrameworkProperties="true"
      UndefineProperties="TargetFramework"
      Private="false" />
  </ItemGroup>

  <Import Project="WebAssembly\Build\src\ReferenceFromSource.props" Condition="'$(ReferenceBlazorBuildLocally)' == 'true'" />

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)..\, Directory.Build.targets))\Directory.Build.targets" />

  <ItemGroup Condition="'$(FixupWebAssemblyHttpHandlerReference)' == 'true'">
    <ProjectReference
      Include="$(RepoRoot)src\Components\WebAssembly\WebAssemblyHttpHandler\src\Microsoft.AspNetCore.Components.WebAssembly.HttpHandler.csproj"
      CopyLocal="false" />
  </ItemGroup>

  <Target Name="_FixupReferenceToWebAssemblyHttpHandler"
    Condition="'$(FixupWebAssemblyHttpHandlerReference)' == 'true'"
    AfterTargets="_ResolveBlazorInputs"
    BeforeTargets="_ResolveBlazorOutputs">
    <!--
      ProjectReference doesn't really play well with IncludeAssets behavior you get when referencing
      the package with IncludeAssets="compile".
    -->
    <ItemGroup>
      <_HttpHandlerAssembly Include="@(_BlazorUserRuntimeAssembly)"
        Condition="%(_BlazorUserRuntimeAssembly.ProjectReferenceOriginalItemSpec) == '$(RepoRoot)src\Components\WebAssembly\WebAssemblyHttpHandler\src\Microsoft.AspNetCore.Components.WebAssembly.HttpHandler.csproj'" />

      <_BlazorUserRuntimeAssembly Remove="@(_HttpHandlerAssembly)" />
    </ItemGroup>
  </Target>
</Project>
